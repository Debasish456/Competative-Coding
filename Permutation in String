'''
Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.

In other words, return true if one of s1's permutations is the substring of s2.

 '''
from itertools import permutations
class Solution:
    def checkInclusion(self, s1: str, s2: str) -> bool:
        lookup1 = [ord(i) - ord('a') for i in s1]
        lookup2 = [ord(i) - ord('a') for i in s2]
        print(lookup1,lookup2)
        number1 = [0] * 26
        number2 = [0] * 26
        for i in lookup1:
            number1[i] +=1
        print(number1)
        for i in range(len(s2)):
            number2[lookup2[i]] +=1
            if i >= len(s1):
                number2[lookup2[i - len(s1)]] -=1
            print(number2)
            if number1 == number2:
                    return True
        return False
