'''
You are given an m x n binary matrix grid. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.

The area of an island is the number of cells with a value 1 in the island.

Return the maximum area of an island in grid. If there is no island, return 0.

'''
class Solution:
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        m=len(grid)
        n=len(grid[0])
        max1=0
        
        def dfs(r,c):
            if r<0 or r>=m or c<0 or c>=n or grid[r][c]==0:
                return 0

            grid[r][c]=0
            cnt=dfs(r,c+1)
            cnt+=dfs(r,c-1)
            cnt+=dfs(r+1,c)
            cnt+=dfs(r-1,c)

            return cnt+1
        
        for i in range(m):
            for j in range(n):
                if grid[i][j]==1:
                    max1=max(max1,dfs(i,j))
                    
        return max1
                    
   
